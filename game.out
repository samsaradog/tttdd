
TTT
  displays the game
    shows an empty board to start
[" X | X | X .-----------. . | . | . .-----------. . | . | . ."]
" 0 | 1 | 2 \n-----------\n X | 4 | 5 \n-----------\n 6 | 7 | 8 \n"
" X | X | X .-----------. . | . | . .-----------. . | . | . ."
expression is  X | X | X .-----------. . | . | . .-----------. . | . | . . token is X board is  0 | 1 | 2 
-----------
 X | 4 | 5 
-----------
 6 | 7 | 8 
result is 
:open
    changes the board based on a user move
  recognizes states
[" X | X | X .-----------. . | . | . .-----------. . | . | . ."]
" X | 1 | 2 \n-----------\n 3 | 4 | 5 \n-----------\n 6 | 7 | 8 \n"
" X | X | X .-----------. . | . | . .-----------. . | . | . ."
expression is  X | X | X .-----------. . | . | . .-----------. . | . | . . token is X board is  X | 1 | 2 
-----------
 3 | 4 | 5 
-----------
 6 | 7 | 8 
result is 
:open
[" X | X | X .-----------. . | . | . .-----------. . | . | . ."]
" X | 1 | X \n-----------\n 3 | 4 | 5 \n-----------\n 6 | 7 | 8 \n"
" X | X | X .-----------. . | . | . .-----------. . | . | . ."
expression is  X | X | X .-----------. . | . | . .-----------. . | . | . . token is X board is  X | 1 | X 
-----------
 3 | 4 | 5 
-----------
 6 | 7 | 8 
result is 
:open
[" X | X | X .-----------. . | . | . .-----------. . | . | . ."]
" X | 1 | X \n-----------\n X | 4 | 5 \n-----------\n 6 | 7 | 8 \n"
" X | X | X .-----------. . | . | . .-----------. . | . | . ."
expression is  X | X | X .-----------. . | . | . .-----------. . | . | . . token is X board is  X | 1 | X 
-----------
 X | 4 | 5 
-----------
 6 | 7 | 8 
result is 
:open
[" X | X | X .-----------. . | . | . .-----------. . | . | . ."]
" X | 1 | X \n-----------\n X | 4 | 5 \n-----------\n 6 | X | 8 \n"
" X | X | X .-----------. . | . | . .-----------. . | . | . ."
expression is  X | X | X .-----------. . | . | . .-----------. . | . | . . token is X board is  X | 1 | X 
-----------
 X | 4 | 5 
-----------
 6 | X | 8 
result is 
:open
[" X | X | X .-----------. . | . | . .-----------. . | . | . ."]
" X | O | X \n-----------\n X | 4 | 5 \n-----------\n 6 | X | 8 \n"
" X | X | X .-----------. . | . | . .-----------. . | . | . ."
expression is  X | X | X .-----------. . | . | . .-----------. . | . | . . token is X board is  X | O | X 
-----------
 X | 4 | 5 
-----------
 6 | X | 8 
result is 
:open
[" X | X | X .-----------. . | . | . .-----------. . | . | . ."]
" X | O | X \n-----------\n X | O | 5 \n-----------\n 6 | X | 8 \n"
" X | X | X .-----------. . | . | . .-----------. . | . | . ."
expression is  X | X | X .-----------. . | . | . .-----------. . | . | . . token is X board is  X | O | X 
-----------
 X | O | 5 
-----------
 6 | X | 8 
result is 
:open
[" X | X | X .-----------. . | . | . .-----------. . | . | . ."]
" X | O | X \n-----------\n X | O | O \n-----------\n 6 | X | 8 \n"
" X | X | X .-----------. . | . | . .-----------. . | . | . ."
expression is  X | X | X .-----------. . | . | . .-----------. . | . | . . token is X board is  X | O | X 
-----------
 X | O | O 
-----------
 6 | X | 8 
result is 
:open
[" X | X | X .-----------. . | . | . .-----------. . | . | . ."]
" X | O | X \n-----------\n X | O | O \n-----------\n O | X | 8 \n"
" X | X | X .-----------. . | . | . .-----------. . | . | . ."
expression is  X | X | X .-----------. . | . | . .-----------. . | . | . . token is X board is  X | O | X 
-----------
 X | O | O 
-----------
 O | X | 8 
result is 
:open
:draw
    recognizes a draw game
[" X | X | X .-----------. . | . | . .-----------. . | . | . ."]
" X | 1 | 2 \n-----------\n 3 | 4 | 5 \n-----------\n 6 | 7 | 8 \n"
" X | X | X .-----------. . | . | . .-----------. . | . | . ."
expression is  X | X | X .-----------. . | . | . .-----------. . | . | . . token is X board is  X | 1 | 2 
-----------
 3 | 4 | 5 
-----------
 6 | 7 | 8 
result is 
:open
[" X | X | X .-----------. . | . | . .-----------. . | . | . ."]
" X | 1 | X \n-----------\n 3 | 4 | 5 \n-----------\n 6 | 7 | 8 \n"
" X | X | X .-----------. . | . | . .-----------. . | . | . ."
expression is  X | X | X .-----------. . | . | . .-----------. . | . | . . token is X board is  X | 1 | X 
-----------
 3 | 4 | 5 
-----------
 6 | 7 | 8 
result is 
:open
[" X | X | X .-----------. . | . | . .-----------. . | . | . ."]
" X | 1 | X \n-----------\n X | 4 | 5 \n-----------\n 6 | 7 | 8 \n"
" X | X | X .-----------. . | . | . .-----------. . | . | . ."
expression is  X | X | X .-----------. . | . | . .-----------. . | . | . . token is X board is  X | 1 | X 
-----------
 X | 4 | 5 
-----------
 6 | 7 | 8 
result is 
:open
[" X | X | X .-----------. . | . | . .-----------. . | . | . ."]
" X | 1 | X \n-----------\n X | 4 | 5 \n-----------\n 6 | X | 8 \n"
" X | X | X .-----------. . | . | . .-----------. . | . | . ."
expression is  X | X | X .-----------. . | . | . .-----------. . | . | . . token is X board is  X | 1 | X 
-----------
 X | 4 | 5 
-----------
 6 | X | 8 
result is 
:open
[" X | X | X .-----------. . | . | . .-----------. . | . | . ."]
" X | O | X \n-----------\n X | 4 | 5 \n-----------\n 6 | X | 8 \n"
" X | X | X .-----------. . | . | . .-----------. . | . | . ."
expression is  X | X | X .-----------. . | . | . .-----------. . | . | . . token is X board is  X | O | X 
-----------
 X | 4 | 5 
-----------
 6 | X | 8 
result is 
:open
[" X | X | X .-----------. . | . | . .-----------. . | . | . ."]
" X | O | X \n-----------\n X | O | 5 \n-----------\n 6 | X | 8 \n"
" X | X | X .-----------. . | . | . .-----------. . | . | . ."
expression is  X | X | X .-----------. . | . | . .-----------. . | . | . . token is X board is  X | O | X 
-----------
 X | O | 5 
-----------
 6 | X | 8 
result is 
:open
[" X | X | X .-----------. . | . | . .-----------. . | . | . ."]
" X | O | X \n-----------\n X | O | O \n-----------\n 6 | X | 8 \n"
" X | X | X .-----------. . | . | . .-----------. . | . | . ."
expression is  X | X | X .-----------. . | . | . .-----------. . | . | . . token is X board is  X | O | X 
-----------
 X | O | O 
-----------
 6 | X | 8 
result is 
:open
[" X | X | X .-----------. . | . | . .-----------. . | . | . ."]
" X | O | X \n-----------\n X | O | O \n-----------\n O | X | 8 \n"
" X | X | X .-----------. . | . | . .-----------. . | . | . ."
expression is  X | X | X .-----------. . | . | . .-----------. . | . | . . token is X board is  X | O | X 
-----------
 X | O | O 
-----------
 O | X | 8 
result is 
:open
    recognizes that a game is not a draw
[" X | X | X .-----------. . | . | . .-----------. . | . | . ."]
" X | 1 | 2 \n-----------\n 3 | 4 | 5 \n-----------\n 6 | 7 | 8 \n"
" X | X | X .-----------. . | . | . .-----------. . | . | . ."
expression is  X | X | X .-----------. . | . | . .-----------. . | . | . . token is X board is  X | 1 | 2 
-----------
 3 | 4 | 5 
-----------
 6 | 7 | 8 
result is 
:open
[" X | X | X .-----------. . | . | . .-----------. . | . | . ."]
" X | X | 2 \n-----------\n 3 | 4 | 5 \n-----------\n 6 | 7 | 8 \n"
" X | X | X .-----------. . | . | . .-----------. . | . | . ."
expression is  X | X | X .-----------. . | . | . .-----------. . | . | . . token is X board is  X | X | 2 
-----------
 3 | 4 | 5 
-----------
 6 | 7 | 8 
result is 
:open
[" X | X | X .-----------. . | . | . .-----------. . | . | . ."]
" X | X | X \n-----------\n 3 | 4 | 5 \n-----------\n 6 | 7 | 8 \n"
" X | X | X .-----------. . | . | . .-----------. . | . | . ."
expression is  X | X | X .-----------. . | . | . .-----------. . | . | . . token is X board is  X | X | X 
-----------
 3 | 4 | 5 
-----------
 6 | 7 | 8 
result is 
:open
    recognizes a winning game (FAILED - 1)
  checks for bad moves
    throws a range error when move out of range
[" X | X | X .-----------. . | . | . .-----------. . | . | . ."]
" 0 | 1 | 2 \n-----------\n 3 | X | 5 \n-----------\n 6 | 7 | 8 \n"
" X | X | X .-----------. . | . | . .-----------. . | . | . ."
expression is  X | X | X .-----------. . | . | . .-----------. . | . | . . token is X board is  0 | 1 | 2 
-----------
 3 | X | 5 
-----------
 6 | 7 | 8 
result is 
:open
    throws a runtime error if the move is already taken

Failures:

  1) TTT recognizes states recognizes a winning game
     Failure/Error: @game.state.should == :x_win
       expected: :x_win
            got: :open (using ==)
       Diff:
       @@ -1,2 +1,2 @@
       -:x_win
       +:open
     # ./spec/tttdd_spec.rb:52:in `block (3 levels) in <top (required)>'

Finished in 0.00652 seconds
7 examples, 1 failure

Failed examples:

rspec ./spec/tttdd_spec.rb:50 # TTT recognizes states recognizes a winning game
